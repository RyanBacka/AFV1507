var netFnc = function(lat, lng){
var geo = require("geo");
var url = "http://api.wunderground.com/api/44f4f693e570c8c6/geolookup/conditions/forecast10day/q/" + lat + "," + lng +".json"; 
console.log(url);
if (Ti.Network.online) {
	var getData = Ti.Network.createHTTPClient();
	getData.onload = function(b){
		console.log(b);
		var json = JSON.parse(this.responseText);
		var netWea = {
		 wea : json.current_observation.weather,
		 tmp: json.current_observation.temperature_string,
		 icon: json.current_observation.icon_url,
		 wind: json.current_observation.wind_string,
		 location : json.location,
		 forecast : json.forecast.txt_forecast
		 };
		console.log(netWea.current, netWea.location, netWea.forecast);
		ui.buildUi(netWea);
	};
	getData.open("GET", url);
	getData.send();
	} else {
		alert("Network currently unavailable.");
	};
};
var zipFnc = function(zip){
var url = "http://api.wunderground.com/api/44f4f693e570c8c6/geolookup/conditions/forecast10day/q/" + zip +".json"; 
console.log(url);
if (Ti.Network.online) {
	var getData = Ti.Network.createHTTPClient();
	getData.onload = function(b){
		console.log(b);
		var json = JSON.parse(this.responseText);
		var netWea = {
		 wea : json.current_observation.weather,
		 tmp: json.current_observation.temperature_string,
		 icon: json.current_observation.icon_url,
		 wind: json.current_observation.wind_string,
		 location : json.location,
		 forecast : json.forecast.txt_forecast
		 };
		 
		 var db = Ti.Database.open("weatherDB");
			db.execute('CREATE TABLE IF NOT EXISTS weatherTbl (id INTEGER PRIMARY KEY, netWea TEXT)');
			db.execute('DELETE FROM weatheTbl');
			db.execute('INSERT INTO asdTbl (var, obj) VALUES (?)', netWea.wea );
			db.execute('INSERT INTO asdTbl (var, obj) VALUES (?)', netWea.tmp );
			db.execute('INSERT INTO asdTbl (var, obj) VALUES (?)', netWea.icon );
			db.execute('INSERT INTO asdTbl (var, obj) VALUES (?)', netWea.wind );
			db.execute('INSERT INTO asdTbl (var, obj) VALUES (?)', netWea.location );
			db.execute('INSERT INTO asdTbl (var, obj) VALUES (?)', netWea.forecast );
		
		db.close();
		
		ui.buildUi(netWea);
	};
	getData.open("GET", url);
	getData.send();
	} else {
		alert("Network currently unavailable.");
		var tblData = [];
		var read = function(){
			var a = 0;
			var db = Ti.Database.open("asdDD");
			db.execute('CREATE TABLE IF NOT EXISTS asdTbl (id INTEGER PRIMARY KEY, weaNet TEXT)');
			var rows = db.execute('SELECT id, weaNet FROM asdTbl');
			while (rows.isValidRow()){
				tblData.push({
					id: rows.fieldByName('id'),
					weaNet: rows.fieldByName('weaNet')
				});
				console.log(tableData(a));
				a++;
				rows.next();	
			};
			rows.close();
			db.close();
		};	
	};
};


	
/*var tblData = [];
var read = function(){
	var db = Ti.Database.open("asdDD");
	db.execute('CREATE TABLE IF NOT EXISTS asdTbl (id INTEGER PRIMARY KEY, name TEXT, desc TEXT)');
	var rows = db.execute('SELECT id, name, desc FROM asdTbl');
	while (rows.isValidRow()){
		tblData.push({
			id: rows.fieldByName('id'),
			name: rows.fieldByName('name'),
			desc: rows.fieldByName('desc')
		});
		rows.next();	
	};
	rows.close();
	db.close();
};

exports.read = read;*/

exports.netFnc = netFnc;